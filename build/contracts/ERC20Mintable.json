{
  "contractName": "ERC20Mintable",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610b39806100206000396000f3fe6080604052600436106100ab5763ffffffff60e060020a600035041663095ea7b381146100b057806318160ddd146100fd57806323b872dd14610124578063395093511461016757806340c10f19146101a057806370a08231146101d9578063983b2d561461020c5780639865027514610241578063a457c2d714610256578063a9059cbb1461028f578063aa271e1a146102c8578063c4d66de8146102fb578063dd62ed3e1461032e575b600080fd5b3480156100bc57600080fd5b506100e9600480360360408110156100d357600080fd5b50600160a060020a038135169060200135610369565b604080519115158252519081900360200190f35b34801561010957600080fd5b506101126103d5565b60408051918252519081900360200190f35b34801561013057600080fd5b506100e96004803603606081101561014757600080fd5b50600160a060020a038135811691602081013590911690604001356103db565b34801561017357600080fd5b506100e96004803603604081101561018a57600080fd5b50600160a060020a038135169060200135610492565b3480156101ac57600080fd5b506100e9600480360360408110156101c357600080fd5b50600160a060020a038135169060200135610530565b3480156101e557600080fd5b50610112600480360360208110156101fc57600080fd5b5035600160a060020a0316610559565b34801561021857600080fd5b5061023f6004803603602081101561022f57600080fd5b5035600160a060020a0316610574565b005b34801561024d57600080fd5b5061023f610594565b34801561026257600080fd5b506100e96004803603604081101561027957600080fd5b50600160a060020a03813516906020013561059f565b34801561029b57600080fd5b506100e9600480360360408110156102b257600080fd5b50600160a060020a0381351690602001356105ea565b3480156102d457600080fd5b506100e9600480360360208110156102eb57600080fd5b5035600160a060020a03166105f7565b34801561030757600080fd5b5061023f6004803603602081101561031e57600080fd5b5035600160a060020a0316610610565b34801561033a57600080fd5b506101126004803603604081101561035157600080fd5b50600160a060020a03813581169160200135166106d9565b6000600160a060020a038316151561038057600080fd5b336000818152603460209081526040808320600160a060020a0388168085529083529281902086905580518681529051929392600080516020610ace833981519152929181900390910190a350600192915050565b60355490565b600160a060020a038316600090815260346020908152604080832033845290915281205461040f908363ffffffff61070416565b600160a060020a038516600090815260346020908152604080832033845290915290205561043e848484610719565b600160a060020a038416600081815260346020908152604080832033808552908352928190205481519081529051929392600080516020610ace833981519152929181900390910190a35060019392505050565b6000600160a060020a03831615156104a957600080fd5b336000908152603460209081526040808320600160a060020a03871684529091529020546104dd908363ffffffff6107d616565b336000818152603460209081526040808320600160a060020a038916808552908352928190208590558051948552519193600080516020610ace833981519152929081900390910190a350600192915050565b600061053b336105f7565b151561054657600080fd5b61055083836107ef565b50600192915050565b600160a060020a031660009081526033602052604090205490565b61057d336105f7565b151561058857600080fd5b61059181610889565b50565b61059d336108d1565b565b6000600160a060020a03831615156105b657600080fd5b336000908152603460209081526040808320600160a060020a03871684529091529020546104dd908363ffffffff61070416565b6000610550338484610719565b600061060a60688363ffffffff61091916565b92915050565b600054610100900460ff16806106295750610629610950565b80610637575060005460ff16155b1515610695576040805160e560020a62461bcd02815260206004820152602e6024820152600080516020610aee8339815191526044820152609260020a6d195b881a5b9a5d1a585b1a5e995902606482015290519081900360840190fd5b60008054600161010061ff00198316811760ff1916919091179092550460ff166106be82610956565b600080549115156101000261ff001990921691909117905550565b600160a060020a03918216600090815260346020908152604080832093909416825291909152205490565b60008282111561071357600080fd5b50900390565b600160a060020a038216151561072e57600080fd5b600160a060020a038316600090815260336020526040902054610757908263ffffffff61070416565b600160a060020a03808516600090815260336020526040808220939093559084168152205461078c908263ffffffff6107d616565b600160a060020a038084166000818152603360209081526040918290209490945580518581529051919392871692600080516020610aae83398151915292918290030190a3505050565b6000828201838110156107e857600080fd5b9392505050565b600160a060020a038216151561080457600080fd5b603554610817908263ffffffff6107d616565b603555600160a060020a038216600090815260336020526040902054610843908263ffffffff6107d616565b600160a060020a0383166000818152603360209081526040808320949094558351858152935192939192600080516020610aae8339815191529281900390910190a35050565b61089a60688263ffffffff610a1316565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6108e260688263ffffffff610a6116565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216151561093057600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b303b1590565b600054610100900460ff168061096f575061096f610950565b8061097d575060005460ff16155b15156109db576040805160e560020a62461bcd02815260206004820152602e6024820152600080516020610aee8339815191526044820152609260020a6d195b881a5b9a5d1a585b1a5e995902606482015290519081900360840190fd5b60008054600161010061ff00198316811760ff1916919091179092550460ff16610a04826105f7565b15156106be576106be82610889565b600160a060020a0381161515610a2857600080fd5b610a328282610919565b15610a3c57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610a7657600080fd5b610a808282610919565b1515610a8b57600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925436f6e747261637420696e7374616e63652068617320616c7265616479206265a165627a7a7230582025ace7d8b06a968bb5b51b82905d5d523bd2269e08c364f9d46e018bc15d794f0029",
  "deployedBytecode": "0x6080604052600436106100ab5763ffffffff60e060020a600035041663095ea7b381146100b057806318160ddd146100fd57806323b872dd14610124578063395093511461016757806340c10f19146101a057806370a08231146101d9578063983b2d561461020c5780639865027514610241578063a457c2d714610256578063a9059cbb1461028f578063aa271e1a146102c8578063c4d66de8146102fb578063dd62ed3e1461032e575b600080fd5b3480156100bc57600080fd5b506100e9600480360360408110156100d357600080fd5b50600160a060020a038135169060200135610369565b604080519115158252519081900360200190f35b34801561010957600080fd5b506101126103d5565b60408051918252519081900360200190f35b34801561013057600080fd5b506100e96004803603606081101561014757600080fd5b50600160a060020a038135811691602081013590911690604001356103db565b34801561017357600080fd5b506100e96004803603604081101561018a57600080fd5b50600160a060020a038135169060200135610492565b3480156101ac57600080fd5b506100e9600480360360408110156101c357600080fd5b50600160a060020a038135169060200135610530565b3480156101e557600080fd5b50610112600480360360208110156101fc57600080fd5b5035600160a060020a0316610559565b34801561021857600080fd5b5061023f6004803603602081101561022f57600080fd5b5035600160a060020a0316610574565b005b34801561024d57600080fd5b5061023f610594565b34801561026257600080fd5b506100e96004803603604081101561027957600080fd5b50600160a060020a03813516906020013561059f565b34801561029b57600080fd5b506100e9600480360360408110156102b257600080fd5b50600160a060020a0381351690602001356105ea565b3480156102d457600080fd5b506100e9600480360360208110156102eb57600080fd5b5035600160a060020a03166105f7565b34801561030757600080fd5b5061023f6004803603602081101561031e57600080fd5b5035600160a060020a0316610610565b34801561033a57600080fd5b506101126004803603604081101561035157600080fd5b50600160a060020a03813581169160200135166106d9565b6000600160a060020a038316151561038057600080fd5b336000818152603460209081526040808320600160a060020a0388168085529083529281902086905580518681529051929392600080516020610ace833981519152929181900390910190a350600192915050565b60355490565b600160a060020a038316600090815260346020908152604080832033845290915281205461040f908363ffffffff61070416565b600160a060020a038516600090815260346020908152604080832033845290915290205561043e848484610719565b600160a060020a038416600081815260346020908152604080832033808552908352928190205481519081529051929392600080516020610ace833981519152929181900390910190a35060019392505050565b6000600160a060020a03831615156104a957600080fd5b336000908152603460209081526040808320600160a060020a03871684529091529020546104dd908363ffffffff6107d616565b336000818152603460209081526040808320600160a060020a038916808552908352928190208590558051948552519193600080516020610ace833981519152929081900390910190a350600192915050565b600061053b336105f7565b151561054657600080fd5b61055083836107ef565b50600192915050565b600160a060020a031660009081526033602052604090205490565b61057d336105f7565b151561058857600080fd5b61059181610889565b50565b61059d336108d1565b565b6000600160a060020a03831615156105b657600080fd5b336000908152603460209081526040808320600160a060020a03871684529091529020546104dd908363ffffffff61070416565b6000610550338484610719565b600061060a60688363ffffffff61091916565b92915050565b600054610100900460ff16806106295750610629610950565b80610637575060005460ff16155b1515610695576040805160e560020a62461bcd02815260206004820152602e6024820152600080516020610aee8339815191526044820152609260020a6d195b881a5b9a5d1a585b1a5e995902606482015290519081900360840190fd5b60008054600161010061ff00198316811760ff1916919091179092550460ff166106be82610956565b600080549115156101000261ff001990921691909117905550565b600160a060020a03918216600090815260346020908152604080832093909416825291909152205490565b60008282111561071357600080fd5b50900390565b600160a060020a038216151561072e57600080fd5b600160a060020a038316600090815260336020526040902054610757908263ffffffff61070416565b600160a060020a03808516600090815260336020526040808220939093559084168152205461078c908263ffffffff6107d616565b600160a060020a038084166000818152603360209081526040918290209490945580518581529051919392871692600080516020610aae83398151915292918290030190a3505050565b6000828201838110156107e857600080fd5b9392505050565b600160a060020a038216151561080457600080fd5b603554610817908263ffffffff6107d616565b603555600160a060020a038216600090815260336020526040902054610843908263ffffffff6107d616565b600160a060020a0383166000818152603360209081526040808320949094558351858152935192939192600080516020610aae8339815191529281900390910190a35050565b61089a60688263ffffffff610a1316565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6108e260688263ffffffff610a6116565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216151561093057600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b303b1590565b600054610100900460ff168061096f575061096f610950565b8061097d575060005460ff16155b15156109db576040805160e560020a62461bcd02815260206004820152602e6024820152600080516020610aee8339815191526044820152609260020a6d195b881a5b9a5d1a585b1a5e995902606482015290519081900360840190fd5b60008054600161010061ff00198316811760ff1916919091179092550460ff16610a04826105f7565b15156106be576106be82610889565b600160a060020a0381161515610a2857600080fd5b610a328282610919565b15610a3c57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610a7657600080fd5b610a808282610919565b1515610a8b57600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925436f6e747261637420696e7374616e63652068617320616c7265616479206265a165627a7a7230582025ace7d8b06a968bb5b51b82905d5d523bd2269e08c364f9d46e018bc15d794f0029",
  "sourceMap": "198:579:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;198:579:12;;;;;;;",
  "deployedSourceMap": "198:579:12:-;;;;;;;;;-1:-1:-1;;;198:579:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2796:238:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2796:238:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2796:238:11;;;;;;;;;;;;;;;;;;;;;;;;;;;997:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;997:89:11;;;;;;;;;;;;;;;;;;;;3497:294;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3497:294:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3497:294:11;;;;;;;;;;;;;;;;;;4294:317;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4294:317:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4294:317:11;;;;;;;;;611:128:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;611:128:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;611:128:12;;;;;;;;;1295:104:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1295:104:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1295:104:11;-1:-1:-1;;;;;1295:104:11;;;646:90:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;646:90:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;646:90:8;-1:-1:-1;;;;;646:90:8;;;;;742:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;742:75:8;;;;5119:327:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5119:327:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5119:327:11;;;;;;;;;2023:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2023:137:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2023:137:11;;;;;;;;;533:107:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;533:107:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;533:107:8;-1:-1:-1;;;;;533:107:8;;;263:101:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;263:101:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;263:101:12;-1:-1:-1;;;;;263:101:12;;;1730:129:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1730:129:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1730:129:11;;;;;;;;;;;2796:238;2861:4;-1:-1:-1;;;;;2885:21:11;;;;2877:30;;;;;;2927:10;2918:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2918:29:11;;;;;;;;;;;;:37;;;2970:36;;;;;;;2918:29;;2927:10;-1:-1:-1;;;;;;;;;;;2970:36:11;;;;;;;;;;-1:-1:-1;3023:4:11;2796:238;;;;:::o;997:89::-;1067:12;;997:89;:::o;3497:294::-;-1:-1:-1;;;;;3621:14:11;;3576:4;3621:14;;;:8;:14;;;;;;;;3636:10;3621:26;;;;;;;;:37;;3652:5;3621:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3592:14:11;;;;;;:8;:14;;;;;;;;3607:10;3592:26;;;;;;;:66;3668:26;3601:4;3684:2;3688:5;3668:9;:26::i;:::-;-1:-1:-1;;;;;3709:54:11;;3736:14;;;;:8;:14;;;;;;;;3724:10;3736:26;;;;;;;;;;;3709:54;;;;;;;3724:10;;3709:54;-1:-1:-1;;;;;;;;;;;3709:54:11;;;;;;;;;;-1:-1:-1;3780:4:11;3497:294;;;;;:::o;4294:317::-;4374:4;-1:-1:-1;;;;;4398:21:11;;;;4390:30;;;;;;4472:10;4463:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4463:29:11;;;;;;;;;;:45;;4497:10;4463:45;:33;:45;:::i;:::-;4440:10;4431:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4431:29:11;;;;;;;;;;;;:77;;;4523:60;;;;;;4431:29;;-1:-1:-1;;;;;;;;;;;4523:60:11;;;;;;;;;;-1:-1:-1;4600:4:11;4294:317;;;;:::o;611:128:12:-;679:4;488:20:8;497:10;488:8;:20::i;:::-;480:29;;;;;;;;695:16:12;701:2;705:5;695;:16::i;:::-;-1:-1:-1;728:4:12;611:128;;;;:::o;1295:104:11:-;-1:-1:-1;;;;;1376:16:11;1350:7;1376:16;;;:9;:16;;;;;;;1295:104::o;646:90:8:-;488:20;497:10;488:8;:20::i;:::-;480:29;;;;;;;;710:19;721:7;710:10;:19::i;:::-;646:90;:::o;742:75::-;785:25;799:10;785:13;:25::i;:::-;742:75::o;5119:327:11:-;5204:4;-1:-1:-1;;;;;5228:21:11;;;;5220:30;;;;;;5302:10;5293:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5293:29:11;;;;;;;;;;:50;;5327:15;5293:50;:33;:50;:::i;2023:137::-;2084:4;2100:32;2110:10;2122:2;2126:5;2100:9;:32::i;533:107:8:-;589:4;612:21;:8;625:7;612:21;:12;:21;:::i;:::-;605:28;533:107;-1:-1:-1;;533:107:8:o;263:101:12:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:20;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:20;;;;-1:-1:-1;;;;;1016:106:20;;;;;;;;;;;;;;;1129:20;1152:12;;;;-1:-1:-1;;1170:19:20;;;;-1:-1:-1;;1195:18:20;;;;;;;;1152:12;;;328:29:12;350:6;328:21;:29::i;:::-;1228:12:20;:30;;;;;;;-1:-1:-1;;1228:30:20;;;;;;;;;-1:-1:-1;263:101:12:o;1730:129:11:-;-1:-1:-1;;;;;1828:15:11;;;1802:7;1828:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1730:129::o;1205:145:9:-;1263:7;1290:6;;;;1282:15;;;;;;-1:-1:-1;1319:5:9;;;1205:145::o;5660:256:11:-;-1:-1:-1;;;;;5747:16:11;;;;5739:25;;;;;;-1:-1:-1;;;;;5793:15:11;;;;;;:9;:15;;;;;;:26;;5813:5;5793:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5775:15:11;;;;;;;:9;:15;;;;;;:44;;;;5845:13;;;;;;;:24;;5863:5;5845:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5829:13:11;;;;;;;:9;:13;;;;;;;;;:40;;;;5884:25;;;;;;;5829:13;;5884:25;;;;-1:-1:-1;;;;;;;;;;;5884:25:11;;;;;;;;5660:256;;;:::o;1431:145:9:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:9:o;6259:263:11:-;-1:-1:-1;;;;;6333:21:11;;;;6325:30;;;;;;6381:12;;:23;;6398:5;6381:23;:16;:23;:::i;:::-;6366:12;:38;-1:-1:-1;;;;;6435:18:11;;;;;;:9;:18;;;;;;:29;;6458:5;6435:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6414:18:11;;;;;;:9;:18;;;;;;;;:50;;;;6479:36;;;;;;;6414:18;;;;-1:-1:-1;;;;;;;;;;;6479:36:11;;;;;;;;;6259:263;;:::o;823:119:8:-;879:21;:8;892:7;879:21;:12;:21;:::i;:::-;915:20;;-1:-1:-1;;;;;915:20:8;;;;;;;;823:119;:::o;948:127::-;1007:24;:8;1023:7;1007:24;:15;:24;:::i;:::-;1046:22;;-1:-1:-1;;;;;1046:22:8;;;;;;;;948:127;:::o;786:162:7:-;858:4;-1:-1:-1;;;;;882:21:7;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:7;:11;:20;;;;;;;;;;;;;;;786:162::o;1349:467:20:-;1782:7;1770:20;1804:7;1349:467;:::o;305:137:8:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:20;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:20;;;;-1:-1:-1;;;;;1016:106:20;;;;;;;;;;;;;;;1129:20;1152:12;;;;-1:-1:-1;;1170:19:20;;;;-1:-1:-1;;1195:18:20;;;;;;;;1152:12;;;375:16:8;384:6;375:8;:16::i;:::-;374:17;370:66;;;407:18;418:6;407:10;:18::i;259:181:7:-;-1:-1:-1;;;;;335:21:7;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:7;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:7;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:7;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;-1:-1:-1;;;;;663:20:7;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:7;;;514:184::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"zos-lib/contracts/Initializable.sol\";\nimport \"./ERC20.sol\";\nimport \"../../access/roles/MinterRole.sol\";\n\n/**\n * @title ERC20Mintable\n * @dev ERC20 minting logic\n */\ncontract ERC20Mintable is Initializable, ERC20, MinterRole {\n    function initialize(address sender) public initializer {\n        MinterRole.initialize(sender);\n    }\n\n    /**\n     * @dev Function to mint tokens\n     * @param to The address that will receive the minted tokens.\n     * @param value The amount of tokens to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address to, uint256 value) public onlyMinter returns (bool) {\n        _mint(to, value);\n        return true;\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "openzeppelin-eth/contracts/token/ERC20/ERC20Mintable.sol",
  "ast": {
    "absolutePath": "openzeppelin-eth/contracts/token/ERC20/ERC20Mintable.sol",
    "exportedSymbols": {
      "ERC20Mintable": [
        2419
      ]
    },
    "id": 2420,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2372,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 2373,
        "nodeType": "ImportDirective",
        "scope": 2420,
        "sourceUnit": 4351,
        "src": "25:45:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 2374,
        "nodeType": "ImportDirective",
        "scope": 2420,
        "sourceUnit": 2371,
        "src": "71:21:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 2375,
        "nodeType": "ImportDirective",
        "scope": 2420,
        "sourceUnit": 1685,
        "src": "93:43:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2376,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4350,
              "src": "224:13:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$4350",
                "typeString": "contract Initializable"
              }
            },
            "id": 2377,
            "nodeType": "InheritanceSpecifier",
            "src": "224:13:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2378,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2370,
              "src": "239:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2370",
                "typeString": "contract ERC20"
              }
            },
            "id": 2379,
            "nodeType": "InheritanceSpecifier",
            "src": "239:5:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2380,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1684,
              "src": "246:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$1684",
                "typeString": "contract MinterRole"
              }
            },
            "id": 2381,
            "nodeType": "InheritanceSpecifier",
            "src": "246:10:12"
          }
        ],
        "contractDependencies": [
          1684,
          2370,
          2488,
          4350
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
        "fullyImplemented": true,
        "id": 2419,
        "linearizedBaseContracts": [
          2419,
          1684,
          2370,
          2488,
          4350
        ],
        "name": "ERC20Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2394,
              "nodeType": "Block",
              "src": "318:46:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2391,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2383,
                        "src": "350:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2388,
                        "name": "MinterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1684,
                        "src": "328:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MinterRole_$1684_$",
                          "typeString": "type(contract MinterRole)"
                        }
                      },
                      "id": 2390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1602,
                      "src": "328:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "328:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2393,
                  "nodeType": "ExpressionStatement",
                  "src": "328:29:12"
                }
              ]
            },
            "documentation": null,
            "id": 2395,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2386,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2385,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4331,
                  "src": "306:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "306:11:12"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2383,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2395,
                  "src": "283:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "283:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "282:16:12"
            },
            "returnParameters": {
              "id": 2387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "318:0:12"
            },
            "scope": 2419,
            "src": "263:101:12",
            "stateMutability": "nonpayable",
            "superFunction": 1602,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2413,
              "nodeType": "Block",
              "src": "685:54:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2407,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2397,
                        "src": "701:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2408,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2399,
                        "src": "705:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2406,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2281,
                      "src": "695:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "695:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2410,
                  "nodeType": "ExpressionStatement",
                  "src": "695:16:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "728:4:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2405,
                  "id": 2412,
                  "nodeType": "Return",
                  "src": "721:11:12"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 2414,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2402,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2401,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1613,
                  "src": "659:10:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "659:10:12"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2397,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2414,
                  "src": "625:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2399,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2414,
                  "src": "637:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "624:27:12"
            },
            "returnParameters": {
              "id": 2405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2404,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2414,
                  "src": "679:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2403,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "678:6:12"
            },
            "scope": 2419,
            "src": "611:128:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2418,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 2419,
            "src": "745:29:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2415,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "745:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2417,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 2416,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "753:2:12",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "745:11:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 2420,
        "src": "198:579:12"
      }
    ],
    "src": "0:778:12"
  },
  "legacyAST": {
    "absolutePath": "openzeppelin-eth/contracts/token/ERC20/ERC20Mintable.sol",
    "exportedSymbols": {
      "ERC20Mintable": [
        2419
      ]
    },
    "id": 2420,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2372,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 2373,
        "nodeType": "ImportDirective",
        "scope": 2420,
        "sourceUnit": 4351,
        "src": "25:45:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 2374,
        "nodeType": "ImportDirective",
        "scope": 2420,
        "sourceUnit": 2371,
        "src": "71:21:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 2375,
        "nodeType": "ImportDirective",
        "scope": 2420,
        "sourceUnit": 1685,
        "src": "93:43:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2376,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4350,
              "src": "224:13:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$4350",
                "typeString": "contract Initializable"
              }
            },
            "id": 2377,
            "nodeType": "InheritanceSpecifier",
            "src": "224:13:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2378,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2370,
              "src": "239:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2370",
                "typeString": "contract ERC20"
              }
            },
            "id": 2379,
            "nodeType": "InheritanceSpecifier",
            "src": "239:5:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2380,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1684,
              "src": "246:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$1684",
                "typeString": "contract MinterRole"
              }
            },
            "id": 2381,
            "nodeType": "InheritanceSpecifier",
            "src": "246:10:12"
          }
        ],
        "contractDependencies": [
          1684,
          2370,
          2488,
          4350
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
        "fullyImplemented": true,
        "id": 2419,
        "linearizedBaseContracts": [
          2419,
          1684,
          2370,
          2488,
          4350
        ],
        "name": "ERC20Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2394,
              "nodeType": "Block",
              "src": "318:46:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2391,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2383,
                        "src": "350:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2388,
                        "name": "MinterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1684,
                        "src": "328:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MinterRole_$1684_$",
                          "typeString": "type(contract MinterRole)"
                        }
                      },
                      "id": 2390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1602,
                      "src": "328:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "328:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2393,
                  "nodeType": "ExpressionStatement",
                  "src": "328:29:12"
                }
              ]
            },
            "documentation": null,
            "id": 2395,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2386,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2385,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4331,
                  "src": "306:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "306:11:12"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2383,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2395,
                  "src": "283:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "283:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "282:16:12"
            },
            "returnParameters": {
              "id": 2387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "318:0:12"
            },
            "scope": 2419,
            "src": "263:101:12",
            "stateMutability": "nonpayable",
            "superFunction": 1602,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2413,
              "nodeType": "Block",
              "src": "685:54:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2407,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2397,
                        "src": "701:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2408,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2399,
                        "src": "705:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2406,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2281,
                      "src": "695:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "695:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2410,
                  "nodeType": "ExpressionStatement",
                  "src": "695:16:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "728:4:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2405,
                  "id": 2412,
                  "nodeType": "Return",
                  "src": "721:11:12"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 2414,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2402,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2401,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1613,
                  "src": "659:10:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "659:10:12"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2397,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2414,
                  "src": "625:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2399,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2414,
                  "src": "637:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "624:27:12"
            },
            "returnParameters": {
              "id": 2405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2404,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2414,
                  "src": "679:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2403,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "678:6:12"
            },
            "scope": 2419,
            "src": "611:128:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2418,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 2419,
            "src": "745:29:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2415,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "745:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2417,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 2416,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "753:2:12",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "745:11:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 2420,
        "src": "198:579:12"
      }
    ],
    "src": "0:778:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-08-25T01:47:11.562Z",
  "devdoc": {
    "details": "ERC20 minting logic",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "ERC20Mintable"
  },
  "userdoc": {
    "methods": {}
  }
}