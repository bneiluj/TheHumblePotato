{
  "contractName": "Token",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610c6b806100206000396000f3fe6080604052600436106100cc5763ffffffff60e060020a60003504166306fdde0381146100d1578063095ea7b31461015b57806318160ddd146101a857806323b872dd146101cf578063313ce56714610212578063395093511461023d57806340c10f191461027657806370a08231146102af57806395d89b41146102e2578063983b2d56146102f7578063986502751461032c578063a457c2d714610341578063a9059cbb1461037a578063aa271e1a146103b3578063c4d66de8146103e6578063dd62ed3e14610419575b600080fd5b3480156100dd57600080fd5b506100e6610454565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610120578181015183820152602001610108565b50505050905090810190601f16801561014d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016757600080fd5b506101946004803603604081101561017e57600080fd5b50600160a060020a038135169060200135610476565b604080519115158252519081900360200190f35b3480156101b457600080fd5b506101bd6104e2565b60408051918252519081900360200190f35b3480156101db57600080fd5b50610194600480360360608110156101f257600080fd5b50600160a060020a038135811691602081013590911690604001356104e8565b34801561021e57600080fd5b5061022761059f565b6040805160ff9092168252519081900360200190f35b34801561024957600080fd5b506101946004803603604081101561026057600080fd5b50600160a060020a0381351690602001356105a4565b34801561028257600080fd5b506101946004803603604081101561029957600080fd5b50600160a060020a038135169060200135610642565b3480156102bb57600080fd5b506101bd600480360360208110156102d257600080fd5b5035600160a060020a031661066b565b3480156102ee57600080fd5b506100e6610686565b34801561030357600080fd5b5061032a6004803603602081101561031a57600080fd5b5035600160a060020a03166106a6565b005b34801561033857600080fd5b5061032a6106c6565b34801561034d57600080fd5b506101946004803603604081101561036457600080fd5b50600160a060020a0381351690602001356106d1565b34801561038657600080fd5b506101946004803603604081101561039d57600080fd5b50600160a060020a03813516906020013561071c565b3480156103bf57600080fd5b50610194600480360360208110156103d657600080fd5b5035600160a060020a0316610729565b3480156103f257600080fd5b5061032a6004803603602081101561040957600080fd5b5035600160a060020a0316610742565b34801561042557600080fd5b506101bd6004803603604081101561043c57600080fd5b50600160a060020a038135811691602001351661080b565b604080518082019091526005815260d960020a642a37b5b2b702602082015281565b6000600160a060020a038316151561048d57600080fd5b336000818152603460209081526040808320600160a060020a0388168085529083529281902086905580518681529051929392600080516020610c00833981519152929181900390910190a350600192915050565b60355490565b600160a060020a038316600090815260346020908152604080832033845290915281205461051c908363ffffffff61083616565b600160a060020a038516600090815260346020908152604080832033845290915290205561054b84848461084b565b600160a060020a038416600081815260346020908152604080832033808552908352928190205481519081529051929392600080516020610c00833981519152929181900390910190a35060019392505050565b601281565b6000600160a060020a03831615156105bb57600080fd5b336000908152603460209081526040808320600160a060020a03871684529091529020546105ef908363ffffffff61090816565b336000818152603460209081526040808320600160a060020a038916808552908352928190208590558051948552519193600080516020610c00833981519152929081900390910190a350600192915050565b600061064d33610729565b151561065857600080fd5b6106628383610921565b50600192915050565b600160a060020a031660009081526033602052604090205490565b604080518082019091526003815260e860020a62544f4b02602082015281565b6106af33610729565b15156106ba57600080fd5b6106c3816109bb565b50565b6106cf33610a03565b565b6000600160a060020a03831615156106e857600080fd5b336000908152603460209081526040808320600160a060020a03871684529091529020546105ef908363ffffffff61083616565b600061066233848461084b565b600061073c60688363ffffffff610a4b16565b92915050565b600054610100900460ff168061075b575061075b610a82565b80610769575060005460ff16155b15156107c7576040805160e560020a62461bcd02815260206004820152602e6024820152600080516020610c208339815191526044820152609260020a6d195b881a5b9a5d1a585b1a5e995902606482015290519081900360840190fd5b60008054600161010061ff00198316811760ff1916919091179092550460ff166107f082610a88565b600080549115156101000261ff001990921691909117905550565b600160a060020a03918216600090815260346020908152604080832093909416825291909152205490565b60008282111561084557600080fd5b50900390565b600160a060020a038216151561086057600080fd5b600160a060020a038316600090815260336020526040902054610889908263ffffffff61083616565b600160a060020a0380851660009081526033602052604080822093909355908416815220546108be908263ffffffff61090816565b600160a060020a038084166000818152603360209081526040918290209490945580518581529051919392871692600080516020610be083398151915292918290030190a3505050565b60008282018381101561091a57600080fd5b9392505050565b600160a060020a038216151561093657600080fd5b603554610949908263ffffffff61090816565b603555600160a060020a038216600090815260336020526040902054610975908263ffffffff61090816565b600160a060020a0383166000818152603360209081526040808320949094558351858152935192939192600080516020610be08339815191529281900390910190a35050565b6109cc60688263ffffffff610b4516565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610a1460688263ffffffff610b9316565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610a6257600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b303b1590565b600054610100900460ff1680610aa15750610aa1610a82565b80610aaf575060005460ff16155b1515610b0d576040805160e560020a62461bcd02815260206004820152602e6024820152600080516020610c208339815191526044820152609260020a6d195b881a5b9a5d1a585b1a5e995902606482015290519081900360840190fd5b60008054600161010061ff00198316811760ff1916919091179092550460ff16610b3682610729565b15156107f0576107f0826109bb565b600160a060020a0381161515610b5a57600080fd5b610b648282610a4b565b15610b6e57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610ba857600080fd5b610bb28282610a4b565b1515610bbd57600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925436f6e747261637420696e7374616e63652068617320616c7265616479206265a165627a7a72305820d4ad91e0f91c607af4618cf317d7a0e8641cd6db3240aa2f001388ca462c3bc00029",
  "deployedBytecode": "0x6080604052600436106100cc5763ffffffff60e060020a60003504166306fdde0381146100d1578063095ea7b31461015b57806318160ddd146101a857806323b872dd146101cf578063313ce56714610212578063395093511461023d57806340c10f191461027657806370a08231146102af57806395d89b41146102e2578063983b2d56146102f7578063986502751461032c578063a457c2d714610341578063a9059cbb1461037a578063aa271e1a146103b3578063c4d66de8146103e6578063dd62ed3e14610419575b600080fd5b3480156100dd57600080fd5b506100e6610454565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610120578181015183820152602001610108565b50505050905090810190601f16801561014d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016757600080fd5b506101946004803603604081101561017e57600080fd5b50600160a060020a038135169060200135610476565b604080519115158252519081900360200190f35b3480156101b457600080fd5b506101bd6104e2565b60408051918252519081900360200190f35b3480156101db57600080fd5b50610194600480360360608110156101f257600080fd5b50600160a060020a038135811691602081013590911690604001356104e8565b34801561021e57600080fd5b5061022761059f565b6040805160ff9092168252519081900360200190f35b34801561024957600080fd5b506101946004803603604081101561026057600080fd5b50600160a060020a0381351690602001356105a4565b34801561028257600080fd5b506101946004803603604081101561029957600080fd5b50600160a060020a038135169060200135610642565b3480156102bb57600080fd5b506101bd600480360360208110156102d257600080fd5b5035600160a060020a031661066b565b3480156102ee57600080fd5b506100e6610686565b34801561030357600080fd5b5061032a6004803603602081101561031a57600080fd5b5035600160a060020a03166106a6565b005b34801561033857600080fd5b5061032a6106c6565b34801561034d57600080fd5b506101946004803603604081101561036457600080fd5b50600160a060020a0381351690602001356106d1565b34801561038657600080fd5b506101946004803603604081101561039d57600080fd5b50600160a060020a03813516906020013561071c565b3480156103bf57600080fd5b50610194600480360360208110156103d657600080fd5b5035600160a060020a0316610729565b3480156103f257600080fd5b5061032a6004803603602081101561040957600080fd5b5035600160a060020a0316610742565b34801561042557600080fd5b506101bd6004803603604081101561043c57600080fd5b50600160a060020a038135811691602001351661080b565b604080518082019091526005815260d960020a642a37b5b2b702602082015281565b6000600160a060020a038316151561048d57600080fd5b336000818152603460209081526040808320600160a060020a0388168085529083529281902086905580518681529051929392600080516020610c00833981519152929181900390910190a350600192915050565b60355490565b600160a060020a038316600090815260346020908152604080832033845290915281205461051c908363ffffffff61083616565b600160a060020a038516600090815260346020908152604080832033845290915290205561054b84848461084b565b600160a060020a038416600081815260346020908152604080832033808552908352928190205481519081529051929392600080516020610c00833981519152929181900390910190a35060019392505050565b601281565b6000600160a060020a03831615156105bb57600080fd5b336000908152603460209081526040808320600160a060020a03871684529091529020546105ef908363ffffffff61090816565b336000818152603460209081526040808320600160a060020a038916808552908352928190208590558051948552519193600080516020610c00833981519152929081900390910190a350600192915050565b600061064d33610729565b151561065857600080fd5b6106628383610921565b50600192915050565b600160a060020a031660009081526033602052604090205490565b604080518082019091526003815260e860020a62544f4b02602082015281565b6106af33610729565b15156106ba57600080fd5b6106c3816109bb565b50565b6106cf33610a03565b565b6000600160a060020a03831615156106e857600080fd5b336000908152603460209081526040808320600160a060020a03871684529091529020546105ef908363ffffffff61083616565b600061066233848461084b565b600061073c60688363ffffffff610a4b16565b92915050565b600054610100900460ff168061075b575061075b610a82565b80610769575060005460ff16155b15156107c7576040805160e560020a62461bcd02815260206004820152602e6024820152600080516020610c208339815191526044820152609260020a6d195b881a5b9a5d1a585b1a5e995902606482015290519081900360840190fd5b60008054600161010061ff00198316811760ff1916919091179092550460ff166107f082610a88565b600080549115156101000261ff001990921691909117905550565b600160a060020a03918216600090815260346020908152604080832093909416825291909152205490565b60008282111561084557600080fd5b50900390565b600160a060020a038216151561086057600080fd5b600160a060020a038316600090815260336020526040902054610889908263ffffffff61083616565b600160a060020a0380851660009081526033602052604080822093909355908416815220546108be908263ffffffff61090816565b600160a060020a038084166000818152603360209081526040918290209490945580518581529051919392871692600080516020610be083398151915292918290030190a3505050565b60008282018381101561091a57600080fd5b9392505050565b600160a060020a038216151561093657600080fd5b603554610949908263ffffffff61090816565b603555600160a060020a038216600090815260336020526040902054610975908263ffffffff61090816565b600160a060020a0383166000818152603360209081526040808320949094558351858152935192939192600080516020610be08339815191529281900390910190a35050565b6109cc60688263ffffffff610b4516565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610a1460688263ffffffff610b9316565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610a6257600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b303b1590565b600054610100900460ff1680610aa15750610aa1610a82565b80610aaf575060005460ff16155b1515610b0d576040805160e560020a62461bcd02815260206004820152602e6024820152600080516020610c208339815191526044820152609260020a6d195b881a5b9a5d1a585b1a5e995902606482015290519081900360840190fd5b60008054600161010061ff00198316811760ff1916919091179092550460ff16610b3682610729565b15156107f0576107f0826109bb565b600160a060020a0381161515610b5a57600080fd5b610b648282610a4b565b15610b6e57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610ba857600080fd5b610bb28282610a4b565b1515610bbd57600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925436f6e747261637420696e7374616e63652068617320616c7265616479206265a165627a7a72305820d4ad91e0f91c607af4618cf317d7a0e8641cd6db3240aa2f001388ca462c3bc00029",
  "sourceMap": "93:156:16:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;93:156:16;;;;;;;",
  "deployedSourceMap": "93:156:16:-;;;;;;;;;-1:-1:-1;;;93:156:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;129:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;129:37:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;129:37:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2796:238:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2796:238:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2796:238:11;;;;;;;;;;;;;;;;;;;;;;;;;;;997:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;997:89:11;;;;;;;;;;;;;;;;;;;;3497:294;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3497:294:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3497:294:11;;;;;;;;;;;;;;;;;;211:35:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;211:35:16;;;;;;;;;;;;;;;;;;;;;;;4294:317:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4294:317:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4294:317:11;;;;;;;;;611:128:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;611:128:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;611:128:12;;;;;;;;;1295:104:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1295:104:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1295:104:11;-1:-1:-1;;;;;1295:104:11;;;170:37:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;170:37:16;;;;646:90:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;646:90:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;646:90:8;-1:-1:-1;;;;;646:90:8;;;;;742:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;742:75:8;;;;5119:327:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5119:327:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5119:327:11;;;;;;;;;2023:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2023:137:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2023:137:11;;;;;;;;;533:107:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;533:107:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;533:107:8;-1:-1:-1;;;;;533:107:8;;;263:101:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;263:101:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;263:101:12;-1:-1:-1;;;;;263:101:12;;;1730:129:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1730:129:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1730:129:11;;;;;;;;;;;129:37:16;;;;;;;;;;;;;-1:-1:-1;;;;;129:37:16;;;;;:::o;2796:238:11:-;2861:4;-1:-1:-1;;;;;2885:21:11;;;;2877:30;;;;;;2927:10;2918:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2918:29:11;;;;;;;;;;;;:37;;;2970:36;;;;;;;2918:29;;2927:10;-1:-1:-1;;;;;;;;;;;2970:36:11;;;;;;;;;;-1:-1:-1;3023:4:11;2796:238;;;;:::o;997:89::-;1067:12;;997:89;:::o;3497:294::-;-1:-1:-1;;;;;3621:14:11;;3576:4;3621:14;;;:8;:14;;;;;;;;3636:10;3621:26;;;;;;;;:37;;3652:5;3621:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3592:14:11;;;;;;:8;:14;;;;;;;;3607:10;3592:26;;;;;;;:66;3668:26;3601:4;3684:2;3688:5;3668:9;:26::i;:::-;-1:-1:-1;;;;;3709:54:11;;3736:14;;;;:8;:14;;;;;;;;3724:10;3736:26;;;;;;;;;;;3709:54;;;;;;;3724:10;;3709:54;-1:-1:-1;;;;;;;;;;;3709:54:11;;;;;;;;;;-1:-1:-1;3780:4:11;3497:294;;;;;:::o;211:35:16:-;244:2;211:35;:::o;4294:317:11:-;4374:4;-1:-1:-1;;;;;4398:21:11;;;;4390:30;;;;;;4472:10;4463:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4463:29:11;;;;;;;;;;:45;;4497:10;4463:45;:33;:45;:::i;:::-;4440:10;4431:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4431:29:11;;;;;;;;;;;;:77;;;4523:60;;;;;;4431:29;;-1:-1:-1;;;;;;;;;;;4523:60:11;;;;;;;;;;-1:-1:-1;4600:4:11;4294:317;;;;:::o;611:128:12:-;679:4;488:20:8;497:10;488:8;:20::i;:::-;480:29;;;;;;;;695:16:12;701:2;705:5;695;:16::i;:::-;-1:-1:-1;728:4:12;611:128;;;;:::o;1295:104:11:-;-1:-1:-1;;;;;1376:16:11;1350:7;1376:16;;;:9;:16;;;;;;;1295:104::o;170:37:16:-;;;;;;;;;;;;;-1:-1:-1;;;;;170:37:16;;;;;:::o;646:90:8:-;488:20;497:10;488:8;:20::i;:::-;480:29;;;;;;;;710:19;721:7;710:10;:19::i;:::-;646:90;:::o;742:75::-;785:25;799:10;785:13;:25::i;:::-;742:75::o;5119:327:11:-;5204:4;-1:-1:-1;;;;;5228:21:11;;;;5220:30;;;;;;5302:10;5293:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5293:29:11;;;;;;;;;;:50;;5327:15;5293:50;:33;:50;:::i;2023:137::-;2084:4;2100:32;2110:10;2122:2;2126:5;2100:9;:32::i;533:107:8:-;589:4;612:21;:8;625:7;612:21;:12;:21;:::i;:::-;605:28;533:107;-1:-1:-1;;533:107:8:o;263:101:12:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:20;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:20;;;;-1:-1:-1;;;;;1016:106:20;;;;;;;;;;;;;;;1129:20;1152:12;;;;-1:-1:-1;;1170:19:20;;;;-1:-1:-1;;1195:18:20;;;;;;;;1152:12;;;328:29:12;350:6;328:21;:29::i;:::-;1228:12:20;:30;;;;;;;-1:-1:-1;;1228:30:20;;;;;;;;;-1:-1:-1;263:101:12:o;1730:129:11:-;-1:-1:-1;;;;;1828:15:11;;;1802:7;1828:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1730:129::o;1205:145:9:-;1263:7;1290:6;;;;1282:15;;;;;;-1:-1:-1;1319:5:9;;;1205:145::o;5660:256:11:-;-1:-1:-1;;;;;5747:16:11;;;;5739:25;;;;;;-1:-1:-1;;;;;5793:15:11;;;;;;:9;:15;;;;;;:26;;5813:5;5793:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5775:15:11;;;;;;;:9;:15;;;;;;:44;;;;5845:13;;;;;;;:24;;5863:5;5845:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5829:13:11;;;;;;;:9;:13;;;;;;;;;:40;;;;5884:25;;;;;;;5829:13;;5884:25;;;;-1:-1:-1;;;;;;;;;;;5884:25:11;;;;;;;;5660:256;;;:::o;1431:145:9:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:9:o;6259:263:11:-;-1:-1:-1;;;;;6333:21:11;;;;6325:30;;;;;;6381:12;;:23;;6398:5;6381:23;:16;:23;:::i;:::-;6366:12;:38;-1:-1:-1;;;;;6435:18:11;;;;;;:9;:18;;;;;;:29;;6458:5;6435:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6414:18:11;;;;;;:9;:18;;;;;;;;:50;;;;6479:36;;;;;;;6414:18;;;;-1:-1:-1;;;;;;;;;;;6479:36:11;;;;;;;;;6259:263;;:::o;823:119:8:-;879:21;:8;892:7;879:21;:12;:21;:::i;:::-;915:20;;-1:-1:-1;;;;;915:20:8;;;;;;;;823:119;:::o;948:127::-;1007:24;:8;1023:7;1007:24;:15;:24;:::i;:::-;1046:22;;-1:-1:-1;;;;;1046:22:8;;;;;;;;948:127;:::o;786:162:7:-;858:4;-1:-1:-1;;;;;882:21:7;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:7;:11;:20;;;;;;;;;;;;;;;786:162::o;1349:467:20:-;1782:7;1770:20;1804:7;1349:467;:::o;305:137:8:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:20;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:20;;;;-1:-1:-1;;;;;1016:106:20;;;;;;;;;;;;;;;1129:20;1152:12;;;;-1:-1:-1;;1170:19:20;;;;-1:-1:-1;;1195:18:20;;;;;;;;1152:12;;;375:16:8;384:6;375:8;:16::i;:::-;374:17;370:66;;;407:18;418:6;407:10;:18::i;259:181:7:-;-1:-1:-1;;;;;335:21:7;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:7;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:7;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:7;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;-1:-1:-1;;;;;663:20:7;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:7;;;514:184::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-eth/contracts/token/ERC20/ERC20Mintable.sol\";\n\ncontract Token is ERC20Mintable {\n  string public constant name = \"Token\";\n  string public constant symbol = \"TOK\";\n  uint8 public constant decimals = 18;\n}\n",
  "sourcePath": "pooltogether-contracts/contracts/Token.sol",
  "ast": {
    "absolutePath": "pooltogether-contracts/contracts/Token.sol",
    "exportedSymbols": {
      "Token": [
        4063
      ]
    },
    "id": 4064,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4050,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:16"
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-eth/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 4051,
        "nodeType": "ImportDirective",
        "scope": 4064,
        "sourceUnit": 2420,
        "src": "25:66:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4052,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2419,
              "src": "111:13:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$2419",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 4053,
            "nodeType": "InheritanceSpecifier",
            "src": "111:13:16"
          }
        ],
        "contractDependencies": [
          1684,
          2370,
          2419,
          2488,
          4350
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4063,
        "linearizedBaseContracts": [
          4063,
          2419,
          1684,
          2370,
          2488,
          4350
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 4056,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 4063,
            "src": "129:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 4054,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "129:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546f6b656e",
              "id": 4055,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "159:7:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                "typeString": "literal_string \"Token\""
              },
              "value": "Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4059,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 4063,
            "src": "170:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 4057,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "170:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "544f4b",
              "id": 4058,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "202:5:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_92ec8c068e88c9c67ad1e93c5fb28a0afc1877fa1cdd216a8e4e432482417ddd",
                "typeString": "literal_string \"TOK\""
              },
              "value": "TOK"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4062,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 4063,
            "src": "211:35:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 4060,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "211:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 4061,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "244:2:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          }
        ],
        "scope": 4064,
        "src": "93:156:16"
      }
    ],
    "src": "0:250:16"
  },
  "legacyAST": {
    "absolutePath": "pooltogether-contracts/contracts/Token.sol",
    "exportedSymbols": {
      "Token": [
        4063
      ]
    },
    "id": 4064,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4050,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:16"
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-eth/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 4051,
        "nodeType": "ImportDirective",
        "scope": 4064,
        "sourceUnit": 2420,
        "src": "25:66:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4052,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2419,
              "src": "111:13:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$2419",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 4053,
            "nodeType": "InheritanceSpecifier",
            "src": "111:13:16"
          }
        ],
        "contractDependencies": [
          1684,
          2370,
          2419,
          2488,
          4350
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4063,
        "linearizedBaseContracts": [
          4063,
          2419,
          1684,
          2370,
          2488,
          4350
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 4056,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 4063,
            "src": "129:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 4054,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "129:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546f6b656e",
              "id": 4055,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "159:7:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                "typeString": "literal_string \"Token\""
              },
              "value": "Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4059,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 4063,
            "src": "170:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 4057,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "170:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "544f4b",
              "id": 4058,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "202:5:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_92ec8c068e88c9c67ad1e93c5fb28a0afc1877fa1cdd216a8e4e432482417ddd",
                "typeString": "literal_string \"TOK\""
              },
              "value": "TOK"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4062,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 4063,
            "src": "211:35:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 4060,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "211:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 4061,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "244:2:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          }
        ],
        "scope": 4064,
        "src": "93:156:16"
      }
    ],
    "src": "0:250:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-08-25T01:47:11.572Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}